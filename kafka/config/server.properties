# https://kafka.apache.org/documentation/#configuration
{{#if cfg.server.broker_id ~}}
broker.id={{cfg.server.broker_id}}
{{/if ~}}
delete.topic.enable={{cfg.server.delete_topic_enable}}

{{#with cfg.socket ~}}
{{#if listeners ~}}
listeners={{listeners}}
{{/if ~}}
{{#if advertised_listeners ~}}
advertised.listeners={{advertised_listeners}}
{{/if ~}}
num.network.threads={{num_network_threads}}
num.io.threads={{num_io_threads}}
socket.send.buffer.bytes={{socket_send_buffer_bytes}}
socket.receive.buffer.bytes={{socket_receive_buffer_bytes}}
socket.request.max.bytes={{socket_request_max_bytes}}
{{/with ~}}

{{#with cfg.log ~}}
{{#if log_dirs ~}}
log.dirs={{log_dirs}}
{{else ~}}
log.dirs={{../pkg.svc_var_path}}/logs
{{/if ~}}
num.partitions={{num_partitions}}
num.recovery.threads.per.data.dir={{num_recovery_threads_per_data_dir}}
log.segment.bytes={{retention.log_segment_bytes}}
{{#with flush ~}}
{{#if interval_messages ~}}
log.flush.interval.messages={{interval_messages}}
{{/if ~}}
{{#if interval_ms ~}}
log.flush.interval.ms={{interval_ms}}
{{/if ~}}
{{/with ~}}
{{#with retention ~}}
log.retention.hours={{hours}}
{{#if bytes ~}}
log.retention.bytes={{bytes}}
{{/if ~}}
log.segment.bytes={{segment_bytes}}
log.retention.check.interval.ms={{check_interval_ms}}
{{/with ~}}
{{/with ~}}

zookeeper.connection.timeout.ms={{cfg.zookeeper.connection_timeout_ms}}
zookeeper.connect={{~#each bind.zookeeper.members}}{{sys.ip}}:{{cfg.port}}{{else}}{{cfg.zookeeper.host}}:{{cfg.kafkaeper.port}}{{~/each}}
zookeeper.session.timeout.ms={{cfg.zookeeper.session_timeout_ms}}
zookeeper.set.acl={{cfg.zookeeper.set_acl}}
zookeeper.sync.time.ms={{cfg.zookeeper.sync_time_ms}}

############################# Advanced #############################
{{#with cfg.advanced ~}}
auto.create.topics.enable={{auto_create_topics_enable}}
auto.leader.rebalance.enable={{auto_leader_rebalance_enable}}
background.threads={{background_threads}}
compression.type={{compression_type}}
leader.imbalance.check.interval.seconds={{leader_imbalance_check_interval_seconds}}
leader.imbalance.per.broker.percentage={{leader_imbalance_per_broker_percentage}}

log.flush.offset.checkpoint.interval.ms={{log_flush_offset_checkpoint_interval_ms}}
log.flush.scheduler.interval.ms={{log_flush_scheduler_interval_ms}}

{{#if log_retention_minutes ~}}
log.retention.minutes={{log_retention_minutes}}
{{/if ~}}
{{#if log_retention_ms ~}}
log.retention.ms={{log_retention_ms}}
{{/if ~}}

log.roll.hours={{log_roll_hours}}
{{#if log_roll_ms ~}}
log.roll.ms={{log_roll_ms}}
{{/if ~}}
log.jitter.hours={{log_jitter_hours}}
{{#if log_jitter_ms ~}}
log.jitter.ms={{log_jitter_ms}}
{{/if ~}}

log.segment.delete.delay.ms={{log_segment_delete_delay_ms}}
message.max.bytes={{message_max_bytes}}
min.insync.replicas={{min_insync_replicas}}
num.replica.fetchers={{num_replica_fetchers}}
offset.metadata.max.bytes={{offset_metadata_max_bytes}}
offsets.commit.required.acks={{offsets_commit_required_acks}}
offsets.commit.timeout.ms={{offsets_commit_timeout_ms}}
offsets.load.buffer.size={{offsets_load_buffer_size}}
offsets.retention.check.interval.ms={{offsets_retention_check_interval_ms}}
offsets.retention.minutes={{offsets_retention_minutes}}
offsets.topic.compression.codec={{offsets_topic_compression_codec}}
offsets.topic.num.partitions={{offsets_topic_num_partitions}}
offsets.topic.replication.factor={{offsets_topic_num_partitions}}
offsets.topic.segment.bytes={{offsets_topic_segment_bytes}}
queued.max.requests={{queued_max_requests}}
replica.fetch.min.bytes={{replica_fetch_min_bytes}}
replica.fetch.wait.max.ms={{replica_fetch_wait_max_ms}}
replica.high.watermark.checkpoint.interval.ms={{replica_high_watermark_checkpoint_interval_ms}}
replica.lag.time.max.ms={{replica_lag_time_max_ms}}
replica.socket.receive.buffer.bytes={{replica_socket_receive_buffer_bytes}}
replica.socket.timeout.ms={{replica_socket_timeout_ms}}
request.timeout.ms={{request_timeout_ms}}
unclean.leader.election.enable={{unclean_leader_election_enable}}
broker.id.generation.enable={{broker_id_generation_enable}}
broker.rack={{broker_rack}}
connections.max.idle.ms={{connections_max_idle_ms}}
controlled.shutdown.enable={{controlled_shutdown_enable}}
controlled.shutdown.max.retries={{controlled_shutdown_max_retries}}
controlled.shutdown.retry.backoff.ms={{controlled_shutdown_retry_backoff_ms}}
controller.socket.timeout.ms={{controller_socket_timeout_ms}}
default.replication.factor={{default_replication_factor}}
fetch.purgatory.purge.interval.requests={{fetch_purgatory_purge_interval_requests}}
group.max.session.timeout.ms={{group_max_session_timeout_ms}}
group.min.session.timeout.ms={{group_min_session_timeout_ms}}
inter.broker.listener.name={{inter_broker_listener_name}}
inter.broker.protocol.version={{inter_broker_protocol_version}}
log.cleaner.backoff.ms={{log_cleaner_backoff_ms}}
log.cleaner.dedupe.buffer.size={{log_cleaner_dedupe_buffer_size}}
log.cleaner.delete.retention.ms={{log_cleaner_delete_retention_ms}}
log.cleaner.enable={{log_cleaner_enable}}
log.cleaner.io.buffer.load.factor={{log_cleaner_io_buffer_load_factor}}
log.cleaner.io.buffer.size={{log_cleaner_io_buffer_size}}

# log.cleaner.io.max.bytes.per.second= #strange value leave it for now

log.cleaner.min.cleanable.ratio={{log_cleaner_min_cleanable_ratio}}
log.cleaner.min.compaction.lag.ms={{log_cleaner_min_compaction_lag_ms}}
log.cleaner.threads={{log_cleaner_threads}}
log.cleanup.policy={{log_cleanup_policy}}
log.index.interval.bytes={{log_index_interval_bytes}}
log.index.size.max.bytes={{log_index_size_max_bytes}}
log.message.format.version={{log_message_format_version}}

# log.message.timestamp.difference.max.ms={{log_message_timestamp_difference_max_ms}}

log.message.timestamp.type={{log_message_timestamp_type}}
log.preallocate={{log_preallocate}}
max.connections.per.ip={{max_connections_per_ip}}
max.connections.per.ip.overrides={{max_connections_per_ip_overrides}}
principal.builder.class={{principal_builder_class}}
producer.purgatory.purge.interval.requests={{producer_purgatory_purge_interval_requests}}
replica.fetch.backoff.ms={{replica_fetch_backoff_ms}}
replica.fetch.max.bytes={{replica_fetch_max_bytes}}
replica.fetch.response.max.bytes={{replica_fetch_response_max_bytes}}
reserved.broker.max.id={{reserved_broker_max_id}}
sasl.enabled.mechanisms={{sasl_enabled_mechanisms}}
sasl.kerberos.kinit.cmd={{sasl_kerberos_kinit_cmd}}
sasl.kerberos.min.time.before.relogin={{sasl_kerberos_min_time_before_relogin}}
sasl.kerberos.principal.to.local.rules={{sasl_kerberos_principal_to_local_rules}}
sasl.kerberos.service.name={{sasl_kerberos_service_name}}
sasl.kerberos.ticket.renew.jitter={{sasl_kerberos_ticket_renew_jitter}}
sasl.kerberos.ticket.renew.window.factor={{sasl_kerberos_ticket_renew_window_factor}}
sasl.mechanism.inter.broker.protocol={{sasl_mechanism_inter_broker_protocol}}
security.inter.broker.protocol={{security_inter_broker_protocol}}
ssl.cipher.suites={{ssl_cipher_suites}}
ssl.client.auth={{ssl_client_auth}}
ssl.enabled.protocols={{ssl_enabled_protocols}}
ssl.key.password={{ssl_key_password}}
ssl.keymanager.algorithm={{ssl_keymanager_algorithm}}
ssl.keystore.location={{ssl_keystore_location}}
ssl.keystore.password={{ssl_keystore_password}}
ssl.keystore.type={{ssl_keystore_type}}
ssl.protocol={{ssl_protocol}}
ssl.provider={{ssl_provider}}
ssl.trustmanager.algorithm={{ssl_trustmanager_algorithm}}
ssl.truststore.location={{ssl_truststore_location}}
ssl.truststore.password={{ssl_truststore_password}}
ssl.truststore.type={{ssl_truststore_type}}
authorizer.class.name={{authorizer_class_name}}
create.topic.policy.class.name={{create_topic_policy_class_name}}
listener.security.protocol.map={{listener_security_protocol_map}}
metric.reporters={{metric_reporters}}
metrics.num.samples={{metrics_num_samples}}
metrics.recording.level={{metrics_recording_level}}
metrics.sample.window.ms={{metrics_sample_window_ms}}
quota.window.num={{quota_window_num}}
quota.window.size.seconds={{quota_window_size_seconds}}
replication.quota.window.num={{replication_quota_window_num}}
replication.quota.window.size.seconds={{replication_quota_window_size_seconds}}
ssl.endpoint.identification.algorithm={{ssl_endpoint_identification_algorithm}}
ssl.secure.random.implementation={{ssl_secure_random_implementation}}

{{/with ~}}
